name: Release
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release_version'
        required: false
        type: string
jobs:
  get_all_var:
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.get_config.outputs.project_name}}
      validated_version: ${{ steps.get_config.outputs.input_version }}
      user_name: ${{ steps.get_config.outputs.user_name}}
    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v4

      -
        name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      -
        name: Get config from pyproject.toml
        id: get_config
        run: |
          PROJECT_NAME=$(python -c 'import tomllib; print(tomllib.load(open("pyproject.toml", "rb"))["project"]["name"])')
          INPUT_VERSION=$(python -c 'import tomllib; print(tomllib.load(open("pyproject.toml", "rb"))["project"]["version"])')
          USER_NAME=$(python -c 'import tomllib; print(tomllib.load(open("pyproject.toml", "rb"))["tool"]["docker"]["user_name"])')
          echo "Get version from pyproject.toml: $INPUT_VERSION"
          echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "input_version=$INPUT_VERSION" >> $GITHUB_OUTPUT
          echo "user_name=$USER_NAME" >> $GITHUB_OUTPUT

      - 
        name: Validate version with regex
        id: filter
        run: |
          version="${{ steps.get_config.outputs.input_version }}"
          echo "Release version: $version"

          regex="^v[0-9]+\.[0-9]+\.[0-9]+$"

          if [[ $version =~ $regex ]]; then
            echo "Version matches the regex."
          else
            echo "Version does not match the regex."
            exit 1
          fi

  create_release:
    runs-on: ubuntu-22.04
    needs: get_all_var
    env:
      PROJECT_NAME: ${{ needs.get_all_var.outputs.project_name}}
      INPUT_VERSION: ${{ needs.get_all_var.outputs.validated_version}}
      USER_NAME: ${{ needs.get_all_var.outputs.user_name}}
    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v4

      -
        name: Install envsubst
        run: |
          sudo apt-get update && sudo apt-get install -y gettext

      -
        name: Generate .env file
        run: |
          cp .env.template .env.template.bak
          VARS_TO_REPLACE='${PROJECT_NAME} ${INPUT_VERSION} ${USER_NAME}'
          envsubst "$VARS_TO_REPLACE" < .env.template.bak > .env

          echo ".env generated successfully âœ…"export 

      -
        name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GIT_ACTION }}
          tag_name: ${{ env.INPUT_VERSION }}
          name: ${{ env.INPUT_VERSION }}
          draft: false
          prerelease: false