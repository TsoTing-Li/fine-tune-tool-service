name: acceltune

networks:
  acceltune:
    name: ${PROJECT_NAME}
    driver: bridge

services:
  main-service:
    image: ${USER_NAME}/${REPOSITORY}-${MAIN_SERVICE_NAME}:${MAIN_SERVICE_TAG}
    container_name: ${MAIN_SERVICE_CONTAINER_NAME}
    env_file:
      - .env
    networks:
      - ${PROJECT_NAME}
    ports:
      - ${MAIN_SERVICE_PORT}:${MAIN_SERVICE_PORT}
    volumes:
      - ${PROJECT_ROOT_PATH}:/app
      - ${HF_HOME}:${HF_HOME}
      - /var/run/docker.sock:/var/run/docker.sock
    ipc: host
    stdin_open: true
    tty: true
    command: uvicorn app:app --host ${MAIN_SERVICE_HOST} --port ${MAIN_SERVICE_PORT}
    restart: unless-stopped

  redis:
    image: ${REDIS_NAME}:${REDIS_TAG}
    container_name: ${REDIS_CONTAINER_NAME}
    volumes:
      - ${PROJECT_ROOT_PATH}/${REDIS_LOCAL_DB_PATH}:/data
    env_file:
      - .env
    networks:
      - ${PROJECT_NAME}
    command: >
      sh -c "mkdir -p ${PWD}/${REDIS_LOCAL_DB_PATH} &&
      redis-server
      --save 60 1
      --loglevel warning
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --dir /data
      --dbfilename redis_snapshot.rdb"
    restart: unless-stopped

  # nginx:
  #   image: nginx:latest
  #   container_name: ${PROJECT_NAME}_nginx
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - "2089:2089"
  #   networks:
  #     - ${PROJECT_NAME}
  #   depends_on:
  #     - main-service
  #     - redis
  #   extra_hosts:
  #     - "acceltune:host-gateway"
  #   restart: always
    

  quantize-service:
    image: ${USER_NAME}/${REPOSITORY}-${QUANTIZE_SERVICE_NAME}:${QUANTIZE_SERVICE_TAG}
    container_name: ${QUANTIZE_SERVICE_CONTAINER_NAME}
    env_file:
      - .env
    volumes:
      - ${PROJECT_ROOT_PATH}/logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    ipc: host
    networks:
      - ${PROJECT_NAME}
    stdin_open: true
    tty: true
    command: uvicorn src.app:quantize_api --host ${QUANTIZE_SERVICE_HOST} --port ${QUANTIZE_SERVICE_PORT}
    restart: unless-stopped

  hw_info:
    image: ${USER_NAME}/${REPOSITORY}-${HWINFO_NAME}:${HWINFO_TAG}
    container_name: ${HWINFO_CONTAINER_NAME}
    env_file:
      - .env
    privileged: true
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - /dev:/dev
      - ${MOUNT_PATH}:${MOUNT_PATH}
    networks:
      - ${PROJECT_NAME}
    runtime: nvidia
    restart: always
